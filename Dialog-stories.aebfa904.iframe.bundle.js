"use strict";(self.webpackChunkatlas_ui_components=self.webpackChunkatlas_ui_components||[]).push([[5583],{"./src/stories-design/Dialog.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Basic:()=>Basic,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var tslib__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/tslib/tslib.es6.mjs"),_angular_core__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),_angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@angular/platform-browser/fesm2022/animations.mjs"),atlas_button__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./dist/atlas-button/fesm2022/atlas-button.mjs"),atlas_cdk__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./dist/atlas-cdk/fesm2022/atlas-cdk.mjs"),_storybook_angular__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/@storybook/angular/dist/index.mjs"),storybook_addon_designs__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/storybook-addon-designs/esm/index.js"),_storybook_constants__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./.storybook/constants.ts");let DialogTest=class DialogTest{dialogRef;data;variantText=atlas_button__WEBPACK_IMPORTED_MODULE_3__.hd.text;actions=atlas_cdk__WEBPACK_IMPORTED_MODULE_4__.En;constructor(dialogRef,data){this.dialogRef=dialogRef,this.data=data}onNoClick(){this.dialogRef.close({data:"Close"})}static ctorParameters=()=>[{type:atlas_cdk__WEBPACK_IMPORTED_MODULE_4__.ce},{type:void 0,decorators:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_1__.Inject,args:[atlas_cdk__WEBPACK_IMPORTED_MODULE_4__.pm]}]}]};DialogTest=(0,tslib__WEBPACK_IMPORTED_MODULE_0__.Cg)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_1__.Component)({selector:"dialog-test",template:'\n  <div dialogTitle>{{data.title}}</div>\n  <div dialogContent>{{data.content}}</div>\n  <div dialogActions align="end">\n    <atlas-button [variant]="variantText" [action]="actions.primary" (click)="onNoClick()">Action</atlas-button>\n    <atlas-button [variant]="variantText" [action]="actions.primary" [dialogClose]="\'Ok\'" cdkFocusInitial>Action</atlas-button>    \n  </div>'})],DialogTest);let LaunchDialogComponent=class LaunchDialogComponent{_dialog;title="";content="";size=atlas_cdk__WEBPACK_IMPORTED_MODULE_4__.SU.medium;autofocus=!1;hasBackdrop=!0;disableClose=!1;constructor(_dialog){this._dialog=_dialog}launch(){this._dialog.open(DialogTest,{autoFocus:this.autofocus,size:this.size,hasBackdrop:this.hasBackdrop,disableClose:this.disableClose,data:{title:this.title,content:this.content}})}static ctorParameters=()=>[{type:atlas_cdk__WEBPACK_IMPORTED_MODULE_4__.lG}];static propDecorators={title:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_1__.Input}],content:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_1__.Input}],size:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_1__.Input}],autofocus:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_1__.Input}],hasBackdrop:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_1__.Input}],disableClose:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_1__.Input}]}};LaunchDialogComponent=(0,tslib__WEBPACK_IMPORTED_MODULE_0__.Cg)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_1__.Component)({selector:"launcher",template:'\n     <atlas-button (click)="launch()">Open dialog</atlas-button>\n  '})],LaunchDialogComponent);const __WEBPACK_DEFAULT_EXPORT__={title:"Adopters/Components/Modal/Dialog",component:LaunchDialogComponent,decorators:[(0,_storybook_angular__WEBPACK_IMPORTED_MODULE_5__.moduleMetadata)({declarations:[DialogTest],imports:[atlas_cdk__WEBPACK_IMPORTED_MODULE_4__.Ph,_angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_2__.BrowserAnimationsModule,atlas_button__WEBPACK_IMPORTED_MODULE_3__.tm]}),storybook_addon_designs__WEBPACK_IMPORTED_MODULE_6__.tb],parameters:{badges:[_storybook_constants__WEBPACK_IMPORTED_MODULE_7__.h.ALPHA],controls:{sort:"requiredFirst"},options:{isToolshown:!0},docs:{description:{component:"Finish LaunchDialogComponent"}}}},Basic=(args=>({props:{...args}})).bind({});Basic.args={title:"Dialog Title",content:"Content...",size:atlas_cdk__WEBPACK_IMPORTED_MODULE_4__.SU.small,autofocus:!1},Basic.parameters={docs:{source:{code:"\n\nimport { ButtonModule, ButtonVariants } from 'atlas-button';\nimport { Actions, Dialog, DialogModule, DialogRef, DialogSizings, HALO_DIALOG_DATA } from 'atlas-cdk';\n\n/** Dialog Test */\n@Component({\n  selector: 'dialog-test',\n  template:`\n  <div dialogTitle>{{data.title}}</div>\n  <div dialogContent>{{data.content}}</div>\n  <div dialogActions align=\"end\">\n    <atlas-button [variant]=\"variantText\" [action]=\"actions.primary\" (click)=\"onNoClick()\">Action</atlas-button>\n    <atlas-button [variant]=\"variantText\" [action]=\"actions.primary\" [dialogClose]=\"'Ok'\" cdkFocusInitial>Action</atlas-button>    \n  </div>` \n  ,\n})\nclass DialogTest {\n\n  variantText:ButtonVariants = ButtonVariants.text;\n  actions = Actions;\n\n  constructor(\n    public dialogRef: DialogRef<DialogTest>,\n    @Inject(HALO_DIALOG_DATA) public data: any) {}\n\n  onNoClick(): void {\n    this.dialogRef.close({data: 'Close'});\n  }\n\n}\n/** Finish Dialog Test */\n\n/** LaunchDialogComponent launch DialogTest component as a modal dialog */\n@Component({\n  selector: 'launcher',\n  template: `\n     <atlas-button (click)=\"launch()\">Open dialog</atlas-button>\n  `\n})\nclass LaunchDialogComponent {\n  @Input() title: string = '';\n  @Input() content: string = '';\n  @Input() size: DialogSizings = DialogSizings.medium;\n  @Input() autofocus: boolean = false;\n  @Input() hasBackdrop: boolean = true;\n  @Input() disableClose: boolean = false;\n  \n  constructor(private _dialog: Dialog) { }\n\n  launch(): void {\n      this._dialog.open(DialogTest, {\n          autoFocus: this.autofocus,\n          size: this.size,\n          hasBackdrop: this.hasBackdrop,\n          disableClose: this.disableClose,\n          data: {\n              title: this.title,\n              content: this.content\n          }\n      });\n  }\n}\n/** Finish LaunchDialogComponent  */\n"}}},Basic.parameters={...Basic.parameters,docs:{...Basic.parameters?.docs,source:{originalSource:"(args: LaunchDialogComponent) => ({\n  props: {\n    ...args\n  }\n})",...Basic.parameters?.docs?.source}}};const __namedExportsOrder=["Basic"]}}]);