"use strict";(self.webpackChunkatlas_ui_components=self.webpackChunkatlas_ui_components||[]).push([[1897],{"./src/stories-components/Table.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Standard:()=>Standard,TableExample:()=>TableExample,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _storybook_constants__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./.storybook/constants.ts"),atlas_table__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./dist/atlas-table/fesm2022/atlas-table.mjs"),atlas_cdk__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./dist/atlas-cdk/fesm2022/atlas-cdk.mjs"),atlas_button__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./dist/atlas-button/fesm2022/atlas-button.mjs"),atlas_icon__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./dist/atlas-icon/fesm2022/atlas-icon.mjs");const __WEBPACK_DEFAULT_EXPORT__={title:"Adopters/Components/Table",component:atlas_table__WEBPACK_IMPORTED_MODULE_1__.Or,subcomponents:{IconButtonComponent:atlas_button__WEBPACK_IMPORTED_MODULE_3__.xB,IconComponent:atlas_icon__WEBPACK_IMPORTED_MODULE_4__.Rl},argTypes:{dense:{control:"boolean",description:"Toggles dense mode for the table, reducing row and cell padding."},headerCellType:{control:"text",description:"CSS class for header cell typography."},align:{control:{type:"select"},options:["left","right","center"],description:"Alignment of cell and header content."},iconColor:{control:"text",description:"Color of the sort icon in header cells."},iconSize:{control:{type:"select"},options:["xsmall","small","medium","large","xlarge","xxlarge"],defaultValue:"small",description:"Size of the sort icon in header cells."},icon:{control:"text",description:"Icon name for the sort icon in header cells."},collection:{control:"text",description:"Icon collection for the sort icon in header cells."},cellType:{control:"text",description:"CSS class for body cell typography."},border:{control:"boolean",description:"Toggles border for table rows."},isSelected:{control:"boolean",description:"Marks the row as selected (applies selected styling)."},highlightSortedHeader:{control:"boolean",description:"Highlights the header cell of the currently sorted column."}},args:{dense:!1,highlightSortedHeader:!1,headerCellType:"typographyStyles-label-mediumAlt",align:"center",iconColor:"default",iconSize:"xsmall",icon:"arrow-up",collection:"arrows",cellType:"typographyStyles-body-small",border:!0,isSelected:!1},parameters:{badges:[_storybook_constants__WEBPACK_IMPORTED_MODULE_0__.h.ALPHA]}},TableTemplate='\n<atlas-table [dense]="dense">\n  <thead atlas-table-header #header [highlightSortedHeader]="highlightSortedHeader">\n    <tr atlas-table-row>\n      <th\n        atlas-table-header-cell\n        *ngFor="let col of columnDef"\n        [columnDef]="col"\n        [headerCellType]="headerCellType"\n        [align]="align"\n        [iconColor]="iconColor"\n        [iconSize]="iconSize"\n        [icon]="icon"\n        [collection]="collection"\n      >\n        {{ col.displayLabel }}\n      </th>\n    </tr>\n  </thead>\n  <tbody atlas-table-body>\n    <tr atlas-table-row *ngFor="let row of rows | sort:header.sortOption" [border]="border" [isSelected]="isSelected">\n      <td atlas-table-cell [cellType]="cellType" [align]="align">\n        {{ row.age }}\n      </td>\n      <td atlas-table-cell [cellType]="cellType" [align]="align">\n        {{ row.name }}\n      </td>\n      <td atlas-table-cell [cellType]="cellType" [align]="align">\n        {{ row.birthplace }}\n      </td>\n      <td atlas-table-cell [cellType]="cellType" [align]="align">\n        {{ row.cars }}\n      </td>\n      <td atlas-table-cell [cellType]="cellType" [align]="align">\n        {{ row.f }}\n      </td>\n    </tr>\n  </tbody>\n  <tfoot atlas-table-footer [footerBackground]="footerBackground">\n    <tr atlas-table-row>\n      <td atlas-table-cell colspan="5">Footer Example</td>\n    </tr>\n  </tfoot>\n</atlas-table>\n',TableTemplate2='\n  <atlas-table>\n    <thead atlas-table-header #header2 [highlightSortedHeader]="highlightSortedHeader">\n      <tr atlas-table-row>\n        <th atlas-table-header-cell>\n        </th>\n        <th atlas-table-header-cell [headerCellType]="headerCellType" *ngFor="let col of columnDef2" [columnDef]="col" [collection]="\'arrows\'" [icon]="\'arrow-up\'"\n        [iconSize]="iconSize">\n          {{ col.displayLabel }}\n        </th>\n      </tr>\n    </thead>\n    <tbody atlas-table-body>\n      <ng-container *ngFor="let row of rows2 | sort : header2.sortOption; let i = index">\n        <tr atlas-table-row>\n          <td atlas-table-cell>\n            <atlas-icon-button (onClick)="toggleRowAccordion(i)" [icon]="expandedRowIndexes.has(i) ? \'icon-chevron-up-24\' : \'icon-chevron-down-24\'"></atlas-icon-button>       \n          </td>\n          <td atlas-table-cell *ngFor="let col of columnDef2" [cellType]="cellType">\n            <ng-container [ngSwitch]="col.fieldKey">\n              <atlas-checkbox\n                *ngSwitchCase="\'action\'"\n                [isChecked]="row[col.fieldKey]"\n                (checkedChange)="row[col.fieldKey] = $event"\n              ></atlas-checkbox>\n              <span *ngSwitchDefault>\n                {{ row[col.fieldKey] }}\n              </span>\n            </ng-container>\n          </td>\n        </tr>\n        <tr *ngIf="expandedRowIndexes.has(i)">\n          <td [attr.colspan]="columnDef2.length + 1" style="padding: 0; background: transparent; border: none">\n            <atlas-table>\n              <thead atlas-table-header>\n                <tr atlas-table-row>\n                  <th>\n                    subcolumn1\n                  </th>\n                  <th>\n                    subcolumn2\n                  </th>\n                </tr>\n              </thead>\n              <tbody atlas-table-body>\n                <tr atlas-table-row>\n                  <td atlas-table-cell>Data 1A</td>\n                  <td atlas-table-cell>Data 1B</td>\n                </tr>\n                <tr atlas-table-row>\n                  <td atlas-table-cell>Data 2A</td>\n                  <td atlas-table-cell>Data 2B</td>\n                </tr>\n              </tbody>\n            </atlas-table>\n          </td>\n        </tr>\n      </ng-container>\n    </tbody>\n  </atlas-table>\n',Standard=(args=>({props:args,moduleMetadata:{imports:[atlas_table__WEBPACK_IMPORTED_MODULE_1__.bG,atlas_cdk__WEBPACK_IMPORTED_MODULE_2__.V5]},template:TableTemplate})).bind({});Standard.args={columnDef:[{displayLabel:"Age",fieldKey:"age",sortable:!0},{displayLabel:"Name",fieldKey:"name",sortable:!0},{displayLabel:"Birthplace",fieldKey:"birthplace",sortable:!0},{displayLabel:"Cars",fieldKey:"cars",sortable:!1}],rows:[{age:"1",name:"Kevin",birthplace:"New York",cars:"Ford"},{age:"12",name:"Helen",birthplace:"California",cars:"Infiniti"},{age:"35",name:"Matt",birthplace:"Florida",cars:"Toyota",selected:!0},{age:"42",name:"Robert",birthplace:"Connecticut",cars:"Subaru"}]},Standard.parameters={docs:{source:{code:TableTemplate}}};const TableExample=(args=>({props:{...args,expandedRowIndexes:new Set,toggleRowAccordion(i){this.expandedRowIndexes.has(i)?this.expandedRowIndexes.delete(i):this.expandedRowIndexes.add(i)}},moduleMetadata:{imports:[atlas_table__WEBPACK_IMPORTED_MODULE_1__.bG,atlas_cdk__WEBPACK_IMPORTED_MODULE_2__.V5,atlas_button__WEBPACK_IMPORTED_MODULE_3__.tm]},template:TableTemplate2})).bind({});TableExample.args={columnDef2:[{displayLabel:"Age",fieldKey:"age",sortable:!0},{displayLabel:"Name",fieldKey:"name",sortable:!0},{displayLabel:"Birthplace",fieldKey:"birthplace",sortable:!0},{displayLabel:"Cars",fieldKey:"cars",sortable:!1}],rows2:[{age:"1",name:"Kevin",birthplace:"New York",cars:"Ford"},{age:"12",name:"Helen",birthplace:"California",cars:"Infiniti"},{age:"35",name:"Matt",birthplace:"Florida",cars:"Toyota",selected:!0},{age:"42",name:"Robert",birthplace:"Connecticut",cars:"Subaru"}]},TableExample.parameters={docs:{source:{code:TableTemplate2},description:{story:"\n        This is an example of a table with a row expansion logic. Copy this for TS file:\n        const expandedRowIndexes = new Set&lt;number&gt;();\n        function toggleRowAccordion(i: number) {\n          if (expandedRowIndexes.has(i)) {\n            expandedRowIndexes.delete(i);\n          } else {\n            expandedRowIndexes.add(i);\n          }\n        }\n      "}}},Standard.parameters={...Standard.parameters,docs:{...Standard.parameters?.docs,source:{originalSource:"(args: TableComponent) => ({\n  props: args,\n  moduleMetadata: {\n    imports: [TableModule, CdkModule]\n  },\n  template: TableTemplate\n})",...Standard.parameters?.docs?.source}}},TableExample.parameters={...TableExample.parameters,docs:{...TableExample.parameters?.docs,source:{originalSource:"(args: TableComponent) => ({\n  props: {\n    ...args,\n    expandedRowIndexes: new Set(),\n    toggleRowAccordion(i: number) {\n      if (this.expandedRowIndexes.has(i)) {\n        this.expandedRowIndexes.delete(i);\n      } else {\n        this.expandedRowIndexes.add(i);\n      }\n    }\n  },\n  moduleMetadata: {\n    imports: [TableModule, CdkModule, ButtonModule]\n  },\n  template: TableTemplate2\n})",...TableExample.parameters?.docs?.source}}};const __namedExportsOrder=["Standard","TableExample"]}}]);